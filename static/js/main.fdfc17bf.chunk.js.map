{"version":3,"sources":["components/Card/null.png","components/Card/rock.png","components/Card/paper.png","components/Card/scissors.png","components/Score/Score.js","components/Card/Card.js","pages/Game/Game.js","components/Message/Header.js","components/Message/Message.js","components/Message/MessageList.js","components/Message/MessageBox.js","pages/Menu/Menu.js","pages/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Score","result1","result2","result3","className","Card","choice","player","weapon","waiting","rock","paper","scissors","src","alt","Game","useState","turn","setTurn","win","setWin","lose","setLose","draw","setDraw","player1","setPlayer1","player2","setPlayer2","winner","setWinner","r1","setR1","r2","setR2","r3","setR3","end","setEnd","useEffect","selectWinner","temp1","temp2","temp3","sum","prev","selectWeapon","onClick","count","time","setInterval","Math","floor","random","clearInterval","Header","title","href","target","Message","props","onClickDelete","bind","e","preventDefault","this","db","database","ref","child","msgKey","remove","message","Component","MessageList","state","messages","on","snapshot","getData","val","values","messagesVal","_","keys","map","messageKey","cloned","clone","key","value","setState","messageNodes","MessageBox","onChange","onKeyup","keyCode","trim","push","placeholder","cols","onKeyUp","Menu","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Home","name","setName","id","type","document","getElementById","localStorage","setItem","to","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.fdfc17bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/null.1ecdbcf2.png\";","module.exports = __webpack_public_path__ + \"static/media/rock.57550028.png\";","module.exports = __webpack_public_path__ + \"static/media/paper.6eff53a9.png\";","module.exports = __webpack_public_path__ + \"static/media/scissors.ce680009.png\";","import React from \"react\";\r\nimport \"./Score.css\";\r\nexport const Score = ({ result1, result2, result3 }) => {\r\n  return (\r\n    <div className=\"circle-arrangement\">\r\n      <div className={result1}></div>\r\n      <div className={result2}></div>\r\n      <div className={result3}></div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./Card.css\";\r\nimport rock from \"./rock.png\";\r\nimport paper from \"./paper.png\";\r\nimport scissors from \"./scissors.png\";\r\nimport waiting from \"./null.png\";\r\nexport const Card = ({ choice, player }) => {\r\n  let weapon = waiting;\r\n\r\n  if (choice === 0) weapon = rock;\r\n  else if (choice === 1) weapon = paper;\r\n  else if (choice === 2) weapon = scissors;\r\n  else weapon = waiting;\r\n\r\n  return (\r\n    <div>\r\n      <img src={weapon} className={player} alt=\"choice\" />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Game.css\";\r\nimport { Score } from \"../../components/Score/Score\";\r\nimport { Card } from \"../../components/Card/Card\";\r\n\r\nexport const Game = () => {\r\n  const [turn, setTurn] = useState(0);\r\n  const [win, setWin] = useState(0);\r\n  const [lose, setLose] = useState(0);\r\n  const [draw, setDraw] = useState(0);\r\n\r\n  const [player1, setPlayer1] = useState(null);\r\n  const [player2, setPlayer2] = useState(null);\r\n  const [winner, setWinner] = useState(null);\r\n  const [r1, setR1] = useState(\"nCircle\");\r\n  const [r2, setR2] = useState(\"nCircle\");\r\n  const [r3, setR3] = useState(\"nCircle\");\r\n  const [end, setEnd] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (player2 != null && end) {\r\n      //console.log(player2, end, turn);\r\n      if (turn === 1) {\r\n        if (selectWinner() === \"Player1 is the winner\") {\r\n          setR1(\"win\");\r\n        } else if (selectWinner() === \"Wow!! It's Draw\") {\r\n          setR1(\"draw\");\r\n        } else {\r\n          setR1(\"lose\");\r\n        }\r\n      } else if (turn === 2) {\r\n        if (selectWinner() === \"Player1 is the winner\") {\r\n          setR2(\"win\");\r\n        } else if (selectWinner() === \"Wow!! It's Draw\") {\r\n          setR2(\"draw\");\r\n        } else {\r\n          setR2(\"lose\");\r\n        }\r\n      } else if (turn === 3) {\r\n        if (selectWinner() === \"Player1 is the winner\") {\r\n          setR3(\"win\");\r\n        } else if (selectWinner() === \"Wow!! It's Draw\") {\r\n          setR3(\"draw\");\r\n        } else {\r\n          setR3(\"lose\");\r\n        }\r\n      }\r\n    }\r\n  }, [player2, end, turn]);\r\n\r\n  useEffect(() => {\r\n    if (turn === 3 && r3 != \"nCircle\") {\r\n      let temp1 = 0;\r\n      let temp2 = 0;\r\n      let temp3 = 0;\r\n\r\n      if (r1 === \"win\") temp1 = 1;\r\n      else if (r1 === \"lose\") temp1 = -1;\r\n\r\n      if (r2 === \"win\") temp2 = 1;\r\n      else if (r2 === \"lose\") temp2 = -1;\r\n\r\n      if (r3 === \"win\") temp3 = 1;\r\n      else if (r3 === \"lose\") temp3 = -1;\r\n\r\n      let sum = temp1 + temp2 + temp3;\r\n\r\n      if (sum > 0) {\r\n        setWin((prev) => prev + 1);\r\n      } else if (sum === 0) {\r\n        setDraw((prev) => prev + 1);\r\n      } else {\r\n        setLose((prev) => prev + 1);\r\n      }\r\n    }\r\n  }, [turn, r3]);\r\n\r\n  const randomP2 = () => {\r\n    var count = 0;\r\n    setPlayer2(null);\r\n    setWinner(null);\r\n    setEnd(false);\r\n    if (turn >= 3) {\r\n      setTurn((prev) => 0);\r\n      setR1(\"nCircle\");\r\n      setR2(\"nCircle\");\r\n      setR3(\"nCircle\");\r\n    }\r\n    if (player1 !== null) {\r\n      let time = setInterval(() => {\r\n        setPlayer2(Math.floor(Math.random() * 3));\r\n        count++;\r\n        if (count > 5) {\r\n          setWinner(selectWinner());\r\n          setTurn((prev) => prev + 1);\r\n          setEnd(true);\r\n          clearInterval(time);\r\n        }\r\n      }, 300);\r\n    }\r\n  };\r\n\r\n  const selectWinner = () => {\r\n    if (\r\n      (player1 === 0 && player2 === 2) ||\r\n      (player1 === 1 && player2 === 0) ||\r\n      (player1 === 2 && player2 === 1)\r\n    ) {\r\n      return \"Player1 is the winner\";\r\n    } else if (player1 === player2) {\r\n      return \"Wow!! It's Draw\";\r\n    } else {\r\n      return \"Player2 is the winner\";\r\n    }\r\n  };\r\n\r\n  const selectWeapon = (weapon) => {\r\n    setPlayer1(weapon);\r\n    setPlayer2(null);\r\n    setWinner(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1>{winner ? selectWinner() : \"Waiting For Result\"}</h1>\r\n      </div>\r\n      <Score result1={r1} result2={r2} result3={r3} />\r\n      <div className=\"result-template\">\r\n        <div className=\"round-result\">\r\n          <h2>Round Result</h2>\r\n          <h2>\r\n            Win : {win} | Draw : {draw} | Lose : {lose}\r\n          </h2>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card-arrangement\">\r\n        <Card choice={player1} player=\"p1\" />\r\n        <button className=\"fight-btn\" onClick={randomP2}>\r\n          Fight\r\n        </button>\r\n        <Card choice={player2} player=\"p2\" />\r\n      </div>\r\n      <h1>Choose Your Hand</h1>\r\n      <div className=\"select-choice\">\r\n        <button onClick={() => selectWeapon(0)}>Rock</button>\r\n        <button onClick={() => selectWeapon(1)}>Paper</button>\r\n        <button onClick={() => selectWeapon(2)}>Scissors</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './Message.css';\r\n\r\nexport const Header = ({title}) =>{\r\n\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <div className=\"navbar-brand\">\r\n                <a className=\"navbar-item\" href=\"https://github.com/Power1stZ\"target=\"_blank\" >\r\n                {title}</a>\r\n            </div>\r\n        </nav>\r\n    );\r\n};","import React, {Component} from 'react';\r\nimport './Message.css';\r\n\r\nvar deleteBtnStyle = {\r\n  float:\"right\"\r\n}\r\n\r\nclass Message extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.onClickDelete = this.onClickDelete.bind(this);\r\n  }\r\n  onClickDelete(e){\r\n    e.preventDefault();\r\n    let dbCon = this.props.db.database().ref('/messages');\r\n    dbCon.child(this.props.msgKey).remove();\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"element\">\r\n        <div>{this.props.message}</div>\r\n        <button className=\"button-is-danger\"  onClick={this.onClickDelete}  >\r\n        Delete\r\n        </button>\r\n     </div>\r\n    )\r\n  }\r\n}\r\nexport default Message","import React, {Component} from 'react';\r\nimport Message from './Message';\r\nimport _ from 'lodash';\r\nimport './Message.css';\r\n\r\nclass MessageList extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      messages: []\r\n    };\r\n    let app = this.props.db.database().ref('messages');\r\n    app.on('value', snapshot => {\r\n      this.getData(snapshot.val());\r\n    });\r\n  }\r\n  getData(values){\r\n    let messagesVal = values;\r\n    let messages = _(messagesVal)\r\n                    .keys()\r\n                    .map(messageKey => {\r\n                      let cloned = _.clone(messagesVal[messageKey]);\r\n                      cloned.key = messageKey;\r\n                      return cloned;\r\n                    }).value();\r\n    this.setState({\r\n      messages: messages\r\n    });\r\n  }\r\n  render() {\r\n    let messageNodes = this.state.messages.map((message) => {\r\n      return (\r\n        <div className=\"card\">\r\n          <div className=\"card-content\">\r\n            <Message message = {message.message} \r\n                msgKey={message.key} \r\n                message = {message.message} \r\n                db={this.props.db}\r\n                />\r\n          </div>\r\n        </div>\r\n      )\r\n    });\r\n    return (\r\n      <div>\r\n        {messageNodes}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MessageList","import React, {Component} from 'react';\r\nimport './Message.css';\r\nimport trim from 'trim';\r\n\r\nclass MessageBox extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onKeyup = this.onKeyup.bind(this);\r\n    this.state = {\r\n      message: ''\r\n    };\r\n  }\r\n  onChange(e){\r\n    this.setState({\r\n      message: e.target.value\r\n    });\r\n  }\r\n  onKeyup(e){\r\n    if(e.keyCode === 13 && trim(e.target.value) !== ''){\r\n      e.preventDefault();\r\n      let dbCon = this.props.db.database().ref('/messages');\r\n      dbCon.push({\r\n        message: trim(e.target.value)\r\n      });\r\n      this.setState({\r\n        message: ''\r\n      });\r\n    }\r\n  }\r\nrender() {\r\n    return (\r\n      <form>\r\n       <textarea \r\n          className=\"textarea\"\r\n          placeholder=\"Type a message\"\r\n          cols=\"100\"\r\n          onChange={this.onChange}\r\n          onKeyUp={this.onKeyup}\r\n          value={this.state.message}>\r\n       </textarea>\r\n      </form>\r\n    )\r\n  }\r\n}\r\nexport default MessageBox","import React, { useState, useEffect } from \"react\";\r\nimport firebase from \"firebase\"\r\nimport \"./Menu.css\";\r\nimport { Header } from \"../../components/Message/Header.js\";\r\nimport MessageList  from \"../../components/Message/MessageList.js\";\r\nimport  MessageBox  from \"../../components/Message/MessageBox.js\";\r\n\r\nexport const Menu = () => {\r\n  const config ={\r\n    apiKey: \"AIzaSyBNdO5CORXMID4JAzLxiFlGQRBCZSId_6A\",\r\n    authDomain: \"chatwithreact-99a98.firebaseapp.com\",\r\n    databaseURL: \"https://chatwithreact-99a98.firebaseio.com\",\r\n    projectId: \"chatwithreact-99a98\",\r\n    storageBucket: \"chatwithreact-99a98.appspot.com\",\r\n    messagingSenderId: \"389398067646\"\r\n  }\r\n  firebase.initializeApp(config);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header title=\"RPSgame\" />\r\n      <div className=\"column\">\r\n        <div className=\"column3\"></div>\r\n        <div className=\"comlumn6\">\r\n          <MessageList db={firebase} />\r\n        </div>\r\n      </div>\r\n      <div className=\"columns\">\r\n        <div className=\"column is-6\">\r\n          <MessageBox db={firebase} />\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport {Link } from 'react-router-dom';\r\n\r\nexport const Home = () =>{\r\n    const [name,setName] = useState(\"\");\r\n    const userName=()=>{\r\n        setName(document.getElementById(\"myInput\").value)\r\n        localStorage.setItem(\"user\",name)\r\n        //console.log(\"df\"+localStorage.getItem(\"user\"));\r\n        //console.log(name)\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Please enter Your Name</h1>\r\n            <input id=\"myInput\" type=\"text\" placeholder=\"Name Surname\" />\r\n            <button onClick={ userName } ><Link to=\"/menu\">Use It!!</Link></button>\r\n        {name}\r\n\r\n        </div>\r\n        )\r\n}","import React from \"react\";\r\nimport { BrowserRouter as Router,Route } from 'react-router-dom';\r\nimport \"./App.css\";\r\nimport { Game } from \"./pages/Game/Game.js\";\r\nimport { Menu } from \"./pages/Menu/Menu.js\";\r\nimport { Home } from \"./pages/Home/Home.js\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Route path=\"/home\" component={Home} />\r\n        <Route path=\"/game\" component={Game} />\r\n        <Route path=\"/menu\" component={Menu} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}